{"version":3,"sources":["components/bookCardInfo.jsx","components/body.jsx","components/addBook.jsx","components/accountPage.jsx","components/loginStyle.js","components/login.jsx","components/registerStyle.js","components/register.jsx","components/header.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["BookCardInfo","state","id","_this","props","bookInfo","_id","react_default","a","createElement","className","style","display","width","height","src","this","url","alt","title","course","price","Component","Body","data","intervalIsSet","input","searchType","getDataFromDb","fetch","api","then","json","res","setState","deleteByIdFromDB","idTodelete","axios","delete","_this2","setTimeout","interval","setInterval","clearInterval","type","books","map","book","toLowerCase","includes","push","_this3","paddingLeft","NavDropdown","Item","href","onClick","placeholder","onChange","e","target","value","Button","margin","variant","search","bookCardInfo","key","AddBook","owner","putDataToDB","post","console","log","catch","err","padding","username","AccountPage","name","user","firstname","email","currentSellingBook","userInfo","Header","accessor","getMyCurrentSellingBook","Fragment","textAlign","lastname","addBook","LoginWrapper","styled","div","_templateObject","LoginBox","_templateObject2","Input","_templateObject3","button","_templateObject4","login","password","LogintoDB","success","message","alert","loginStyle_Button","RegisterWrapper","registerStyle_templateObject","RegisterBox","registerStyle_templateObject2","registerStyle_templateObject3","registerStyle_templateObject4","Register","putDataToUserDB","registerStyle_Input","registerStyle_Button","topRight","setTopRight","content","users","setContent","components_login","accountPage","signOut","body","register","Navbar","bg","expand","marginBottom","Brand","Toggle","aria-controls","Collapse","Nav","Link","onSelect","Form","inline","Footer","color","App","deleteAll","forEach","dat","addAll","arrBook","bok","obj","backgroundColor","header","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7a4dc49.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass BookCardInfo extends Component {\r\n  state = {\r\n    id: this.props.bookInfo._id\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-2\" style={{ display: \"inline-table\" }}>\r\n        <div className=\"card\">\r\n          <div className=\"badge badge-dark\">\r\n            <img\r\n              style={{ width: 300, height: \"100%\" }}\r\n              src={this.props.bookInfo.url}\r\n              alt=\"Logo\"\r\n            />\r\n            <h5 className=\"card-title\">\r\n              Book Name: {this.props.bookInfo.title}\r\n            </h5>\r\n            <p className=\"card-text\">Course: {this.props.bookInfo.course}</p>\r\n            <p>Price: {this.props.bookInfo.price}</p>\r\n            {/* <button\r\n                onClick={() => {\r\n                  this.props.deleteByIdFromDB(this.props.bookInfo._id);\r\n                }}\r\n              >\r\n                Delete This Book\r\n              </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookCardInfo;\r\n","import React, { Component } from \"react\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport axios from \"axios\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass Body extends Component {\r\n  state = {\r\n    data: [],\r\n    intervalIsSet: null,\r\n    display: [],\r\n    input: \"\",\r\n    searchType: \"title\"\r\n  };\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n    //Need better implementation for this in case of slow internet connection\r\n    setTimeout(()=>{this.setState({display: this.state.data})}, 200);\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  // our first get method that uses our backend api to\r\n  // fetch data from our data base\r\n  // # see this.state.data\r\n  getDataFromDb = () => {\r\n    fetch(this.props.api+\"/getData\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ data: res.data }));\r\n  };\r\n\r\n  // to remove existing database information\r\n  // # idTodelete = _id from database\r\n  deleteByIdFromDB = idTodelete => {\r\n    axios.delete(this.props.api+\"/deleteByIdData\", {\r\n      data: { id: idTodelete }\r\n    });\r\n  };\r\n\r\n  search(type,input){\r\n    var books = [];\r\n    this.state.data.map(book => {\r\n      if (book[type] && book[type].toLowerCase().includes(input)) books.push(book);\r\n    });\r\n    this.setState({display: books});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{paddingLeft:\"40%\"}}>\r\n          <NavDropdown title={this.state.searchType} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item\r\n              href=\"#action/3.1\"\r\n              onClick={() => {\r\n                this.setState({searchType: \"title\"});           \r\n              }}\r\n            >\r\n              title\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              href=\"#action/3.2\"\r\n              onClick={() => {\r\n                this.setState({searchType: \"course\"});\r\n              }}\r\n            >\r\n              course\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            className=\"mr-sm-2\"\r\n            onChange={e => {\r\n              this.setState({ input: e.target.value });\r\n            }}\r\n          />\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              this.search(this.state.searchType, this.state.input);\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              this.setState({display: this.state.data});\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </div>\r\n        <hr/>\r\n        <div>\r\n          {this.state.display.map(book => (\r\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\r\n          ))\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass AddBook extends Component {\r\n  state = { title: null, price: null, course: null, url: null, owner: null };\r\n\r\n  // our put method that uses our backend api\r\n  // to create new query into our data base\r\n  // # json = json object\r\n  putDataToDB = json => {\r\n    axios\r\n      .post(this.props.api + \"/putData\", json)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"10px\", display: \"grid\" }}>\r\n        <label>\r\n          Book title:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ title: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Book Price:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ price: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Course:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ course: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Image URL:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ url: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n        <button\r\n          style={{ width: \"200px\" }}\r\n          onClick={() => {\r\n            // this.props.setAccount();\r\n            this.putDataToDB({\r\n              title: this.state.title,\r\n              price: this.state.price,\r\n              course: this.state.course,\r\n              url: this.state.url,\r\n              owner: this.props.username\r\n            });\r\n          }}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBook;\r\n","import React, { Component } from \"react\";\r\nimport AddBook from \"./addBook\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport axios from \"axios\";\r\n\r\nclass AccountPage extends Component {\r\n  state = {\r\n    name: this.props.user.firstname,\r\n    email: this.props.user.email,\r\n    currentSellingBook: [],\r\n    intervalIsSet: null,\r\n    userInfo: [\r\n      {\r\n        Header: \"Username\",\r\n        accessor: \"name\"\r\n      },\r\n      {\r\n        Header: \"Email\",\r\n        accessor: \"email\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {\r\n    this.getMyCurrentSellingBook();\r\n\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getMyCurrentSellingBook, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  //new function for getting current selling book\r\n  getMyCurrentSellingBook = () => {\r\n    axios\r\n      .post(this.props.api+\"/search\", {\r\n        owner: this.props.user.username\r\n      })\r\n      .then(res => {\r\n        this.setState({ currentSellingBook: res.data.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Welcome {this.props.user.firstname + \" \" + this.props.user.lastname}\r\n        </h1>\r\n        <table style={{ textAlign: \"center\" }}>\r\n          <tr>\r\n            <th>Your username</th>\r\n            <th>Your account email</th>\r\n          </tr>\r\n          <tr>\r\n            <td>{this.props.user.username}</td>\r\n            <td>{this.props.user.email}</td>\r\n          </tr>\r\n        </table>\r\n        <hr />\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Here is the book you are currently selling\r\n        </h2>\r\n\r\n        <div>\r\n          {this.state.currentSellingBook.map(book => (\r\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\r\n          ))}\r\n        </div>\r\n\r\n        <AddBook username={this.props.user.username} api={this.props.api} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoginWrapper = styled.div`\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const LoginBox = styled.div`\r\n  width: 320px;\r\n  height: 370px;\r\n  background: radial-gradient(\r\n    ellipse farthest-corner at center top,\r\n    #1e90ff 0%,\r\n    #a9bcd0 100%\r\n  );\r\n  padding: 50px 30px;\r\n  color: white;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 260px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding: 0 10px;\r\n  margin: 10px auto;\r\n  color: #777;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 220px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  color: #fff;\r\n  background: #ff0000;\r\n  border-radius: 15px;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { LoginWrapper, LoginBox, Input, Button } from \"./loginStyle\";\r\nimport axios from \"axios\";\r\n\r\nclass login extends Component {\r\n  state = { username: null, password: null };\r\n\r\n  LogintoDB = json => {\r\n    axios\r\n      .post(this.props.api +\"/login\", json)\r\n      .then(res => {\r\n        if (res.data.user == null) {\r\n          console.log({ success: false, message: \"user not found.\" });\r\n          alert(\"User not found\");\r\n          return 0;\r\n        }\r\n        this.props.login(res.data.user);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <LoginWrapper>\r\n          <LoginBox>\r\n            <h1>Login Page</h1>\r\n            <label>\r\n              Username:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ username: e.target.value })}\r\n                placeholder=\"username\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.setState({ password: e.target.value })}\r\n                placeholder=\"password\"\r\n              />\r\n            </label>\r\n            <Button\r\n              onClick={() =>\r\n                this.LogintoDB({\r\n                  username: this.state.username,\r\n                  password: this.state.password\r\n                })\r\n              }\r\n            >\r\n              Login to System\r\n            </Button>\r\n          </LoginBox>\r\n        </LoginWrapper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RegisterWrapper = styled.div`\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const RegisterBox = styled.div`\r\n  width: 320px;\r\n  height: 550px;\r\n  background: radial-gradient(\r\n    ellipse farthest-corner at center top,\r\n    #1e90ff 0%,\r\n    #a9bcd0 100%\r\n  );\r\n  padding: 50px 30px;\r\n  color: white;\r\n  box-sizing: border-box;\r\n  vertical-align: middle;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 140%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 255px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  color: #fff;\r\n  background: #ff0000;\r\n  border-radius: 5px;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { RegisterWrapper, RegisterBox, Input, Button } from \"./registerStyle\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: null,\r\n    email: null,\r\n    firstname: null,\r\n    lastname: null,\r\n    password: null\r\n  };\r\n\r\n  putDataToUserDB = json => {\r\n    axios\r\n      .post(this.props.api+\"/putUser\", json)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          alert(\"Register Successfully\");\r\n          this.props.login(json);\r\n        } else alert(\"User already exist.\");\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RegisterWrapper>\r\n          <RegisterBox>\r\n            <h1> Register Page</h1>\r\n            <label>\r\n              Username:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ username: e.target.value })}\r\n                placeholder=\"username\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ email: e.target.value })}\r\n                placeholder=\"email\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Firstname:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ firstname: e.target.value })}\r\n                placeholder=\"firstname\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Lastname:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ lastname: e.target.value })}\r\n                placeholder=\"lastname\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.setState({ password: e.target.value })}\r\n                placeholder=\"password\"\r\n              />\r\n            </label>\r\n            <Button\r\n              onClick={() =>\r\n                this.putDataToUserDB({\r\n                  username: this.state.username,\r\n                  email: this.state.email,\r\n                  firstname: this.state.firstname,\r\n                  lastname: this.state.lastname,\r\n                  password: this.state.password\r\n                })\r\n              }\r\n            >\r\n              Register\r\n            </Button>\r\n          </RegisterBox>\r\n        </RegisterWrapper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport StickyHeader from \"react-headroom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport AccountPage from \"./accountPage\";\r\nimport Body from \"./body\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport axios from \"axios\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\n\r\nclass Header extends Component {\r\n  state = { input: null, user: null, topRight: null };\r\n\r\n  componentDidMount() {\r\n    this.setTopRight(\r\n      <React.Fragment>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => this.props.setContent(<Login login={this.login} api={this.props.api}/>)}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => this.props.setContent(<Register login={this.login} api={this.props.api}/>)}\r\n        >\r\n          Register\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  setTopRight = content => {\r\n    this.setState({\r\n      topRight: content\r\n    });\r\n  };\r\n\r\n  login = users => {\r\n    if (users == null) {\r\n      this.props.setContent(<Login login={this.login} api={this.props.api}/>);\r\n      return 0;\r\n    }\r\n    this.setState({ user: users });\r\n    this.props.setContent(<AccountPage user={users} api={this.props.api}/>);\r\n    this.setTopRight(\r\n      <Button\r\n        style={{ margin: \"5px\" }}\r\n        variant=\"outline-primary\"\r\n        onClick={() => this.signOut()}\r\n      >\r\n        Sign Out\r\n      </Button>\r\n    );\r\n    return 1;\r\n  };\r\n\r\n  signOut = () => {\r\n    this.props.setContent(<Body api={this.props.api}/>);\r\n    this.setState({ user: null });\r\n    this.setTopRight(\r\n      <React.Fragment>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => this.props.setContent(<Login login={this.login} api={this.props.api}/>)}\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() => this.props.setContent(<Register login={this.login} api={this.props.api}/>)}\r\n        >\r\n          Register\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  // search = obj => {\r\n  //   axios\r\n  //     .post(this.props.api+\"/search\", obj)\r\n  //     .then(res => {\r\n  //       this.props.setContent(\r\n  //         <React.Fragment>\r\n  //           {res.data.data.map(book => (\r\n  //             <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\r\n  //           ))}\r\n  //         </React.Fragment>\r\n  //       );\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar\r\n        bg=\"navbar navbar-dark bg-dark\"\r\n        expand=\"lg\"\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        <Navbar.Brand href=\"#home\">\r\n          UB Platform\r\n          <img\r\n            src=\"https://img.icons8.com/doodle/48/000000/books.png\"\r\n            style={{ width: 30 }}\r\n          />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link\r\n              href=\"#home\"\r\n              onSelect={() => {\r\n                this.props.setContent(<Body api={this.props.api}/>);\r\n              }}\r\n            >\r\n              >Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"#accountPage\"\r\n              onSelect={() => {\r\n                this.login(this.state.user);\r\n              }}\r\n            >\r\n              Account\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Form inline>\r\n            {this.state.topRight}\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport \"./footerStyle.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <footer className=\"page-footer bg-dark\">\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\" style={{ color: \"white\" }}>\r\n                <h5 className=\"text-uppercase\">Contact US</h5>\r\n                <p>Email: Please contact us xliu72@buffalo.edu</p>\r\n                <p>Phone: 4152839557</p>\r\n              </div>\r\n\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\r\n                  Career Page\r\n                </h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Join Team</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Seek Career</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\r\n                  See Team\r\n                </h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Post Question</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Seek Question</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"footer-copyright text-center py-3\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <p>© 2019 Copyright</p>\r\n            <a href=\"https://www.google.com/\"> www.ubplatform.com</a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Body from \"./components/body\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  // initialize our state\r\n  state = {\r\n    api : \"http://3.18.110.2:3001/api\",\r\n    content: null,\r\n    deleteByIdFromDB: null,\r\n    book: [\r\n      {\r\n        title: \"Harry Potter\",\r\n        price: \"$2\",\r\n        course: \"CSE442\",\r\n        url:\r\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\r\n      },\r\n      {\r\n        title: \"Harry Potter\",\r\n        price: \"$20\",\r\n        course: \"CSE442\",\r\n        url:\r\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({content: <Body api={this.state.api}/>});\r\n  }\r\n\r\n  //Warning! This is use for test purpose, This will delete all data in database\r\n  deleteAll = () => {\r\n    this.state.data.forEach(dat => {\r\n      axios.delete(this.state.api+\"/deleteByIdData\", {\r\n        data: {\r\n          id: dat._id\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  //This method allow to add multiple book at once\r\n  // arrBook = array of JSON that contain book information (see dataschema for detail)\r\n  addAll = arrBook => {\r\n    arrBook.forEach(bok => {\r\n      axios.post(this.state.api+\"/putData\", bok);\r\n    });\r\n  };\r\n\r\n  setContent = obj => {\r\n    this.setState({ content: obj });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"#D8D8D8\" }}>\r\n        <Header setContent={this.setContent} api={this.state.api}/>\r\n        {/* <button onClick={this.deleteAll}>Delete All Book</button> */}\r\n        {this.state.content}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}