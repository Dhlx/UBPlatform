{"version":3,"sources":["components/bookCardInfo.jsx","components/body.jsx","components/pageButton.jsx","components/addBook.jsx","components/accountPage.jsx","components/loginStyle.js","components/resetPass.jsx","components/login.jsx","components/registerStyle.js","components/register.jsx","components/interestsPage.jsx","components/reportPage.jsx","components/header.jsx","components/policyPage.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["BookCardInfo","state","id","_this","props","bookInfo","_id","modalIsOpen","openModal","setState","closeModal","react_default","a","createElement","className","style","display","width","height","src","this","url","alt","title","course","price","class","onClick","bind","Modal","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","ModalHeader","ModalBody","owner","ModalFooter","Component","Body","data","intervalIsSet","pages","itemIndex","pageCount","pageSize","input","searchType","getDataFromDb","fetch","api","then","json","res","deleteByIdFromDB","idTodelete","axios","delete","search","type","books","map","book","toLowerCase","includes","push","getArray","length","totalPage","Math","ceil","pageButton","amount","postBooks","postIndex","start","end","list","i","resetSearch","document","getElementById","value","_this2","interval","setInterval","setTimeout","clearInterval","_this3","paddingLeft","NavDropdown","Item","href","placeholder","onChange","e","target","Button","margin","variant","bookCardInfo","key","marginLeft","AddBook","putDataToDB","post","console","log","catch","err","padding","username","AccountPage","buttonClass","buttonClassOp","name","user","firstname","email","currentSellingBook","userInfo","Header","accessor","password","newPassword","getMyCurrentSellingBook","addInter","obj","success","message","updatePassword","oldPass","newPass","alert","signOut","Fragment","textAlign","lastname","updateInter","randomBook","addBook","LoginWrapper","styled","div","_templateObject","LoginBox","_templateObject2","Input","_templateObject3","button","_templateObject4","ResetPass","resetPassword","setContent","body","loginStyle_Button","login","LogintoDB","resetPass","RegisterWrapper","registerStyle_templateObject","RegisterBox","registerStyle_templateObject2","registerStyle_templateObject3","registerStyle_templateObject4","Register","putDataToUserDB","registerStyle_Input","registerStyle_Button","interestsList","InterestsPage","reportPage","reportSend","method","action","rows","cols","form","topRight","currInterests","setTopRight","content","users","components_login","accountPage","register","interList","localRandomBook","localTime","_loop","legnth","random1","floor","random","random2","tempInter","Navbar","bg","expand","marginBottom","Brand","Toggle","aria-controls","Collapse","Nav","Link","onSelect","components_reportPage","interestsPage","Form","inline","PolicyPage","Footer","color","policyPage","react_social_icons","App","deleteAll","forEach","dat","addAll","arrBook","bok","backgroundColor","header","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6d48f4d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  UncontrolledPopover,\r\n  PopoverHeader,\r\n  PopoverBody\r\n} from \"reactstrap\";\r\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\r\n\r\nclass BookCardInfo extends Component {\r\n  state = {\r\n    id: this.props.bookInfo._id,\r\n    modalIsOpen: false\r\n  };\r\n\r\n  openModal = () => {\r\n    this.setState({ modalIsOpen: true });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-2\" style={{ display: \"inline-table\" }}>\r\n        <div className=\"card\">\r\n          <div className=\"badge badge-dark\">\r\n            <img\r\n              style={{ width: 300, height: \"100%\" }}\r\n              src={this.props.bookInfo.url}\r\n              alt=\"Logo\"\r\n            />\r\n            <h5 className=\"card-title\">\r\n              Book Name: {this.props.bookInfo.title}\r\n            </h5>\r\n            <p className=\"card-text\">Course: {this.props.bookInfo.course}</p>\r\n            <p>Price: {this.props.bookInfo.price}</p>\r\n\r\n            {/* <button\r\n                onClick={() => {\r\n                  this.props.deleteByIdFromDB(this.props.bookInfo._id);\r\n                }}\r\n              >\r\n                Delete This Book\r\n              </button> */}\r\n\r\n            {/* <button onClick={this.openModal}>Open Modal</button> */}\r\n\r\n            <button class=\"btn btn-primary\" onClick={this.openModal.bind(this)}>\r\n              More details\r\n            </button>\r\n            <Modal\r\n              isOpen={this.state.modalIsOpen}\r\n              onAfterOpen={this.afterOpenModal}\r\n              onRequestClose={this.closeModal}\r\n              contentLabel=\"Example Modal\"\r\n            >\r\n              <ModalHeader> Book Details </ModalHeader>\r\n              <ModalBody>\r\n                <div>Book Author: </div>\r\n                <h5> Junjie Chen</h5>\r\n\r\n                <div>Book edition: </div>\r\n                <h5> Third edition</h5>\r\n\r\n                <div>Book Owner: </div>\r\n                <h5> {this.props.bookInfo.owner}</h5>\r\n\r\n                <div>Book contact Info: </div>\r\n                <h5> yzou8@buffalo.edu</h5>\r\n\r\n                <div>Book Price: </div>\r\n                <h5> {this.props.bookInfo.price}</h5>\r\n                <div>Book Descrption: </div>\r\n                <h5>\r\n                  {\" \"}\r\n                  Features: 200 hard puzzles Big grids for easy solving\r\n                  Introduction by legendary puzzlemaster Will Shortz\r\n                </h5>\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <button class=\"btn btn-primary\" onClick={this.closeModal}>\r\n                  close\r\n                </button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          data-toggle=\"modal\"\r\n          data-target=\".bd-example-modal-sm\"\r\n        >\r\n          Small modal\r\n        </button>\r\n        <Modal isOpen={false}>\r\n          <ModalHeader> Modal Title </ModalHeader>\r\n        </Modal> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookCardInfo;\r\n","import React, { Component } from \"react\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport axios from \"axios\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PageButton from \"./pageButton\";\r\n\r\nclass Body extends Component {\r\n  state = {\r\n    data: [],\r\n    intervalIsSet: null,\r\n    display: [],\r\n    pages: [],\r\n    itemIndex: 0,\r\n    pageCount: 1,\r\n    pageSize: 8,\r\n    input: \"\",\r\n    searchType: \"title\"\r\n  };\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(()=>{\r\n        if(this.state.data < 1){\r\n          this.getDataFromDb();\r\n          setTimeout(() => {\r\n            this.setState({ display: this.state.data,\r\n              pages: this.getArray(this.state.data, 0,this.state.pageSize < this.state.data.length ? this.state.pageSize : this.state.data.length),\r\n              totalPage: Math.ceil(this.state.data.length / this.state.pageSize) });\r\n          }, 1000);\r\n        }\r\n      }, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  // our first get method that uses our backend api to\r\n  // fetch data from our data base\r\n  // # see this.state.data\r\n\r\n  getDataFromDb = () => {\r\n    fetch(this.props.api + \"/getData\")\r\n      .then(data => data.json())\r\n      .then(res => this.setState({ data: res.data }));\r\n  };\r\n\r\n  // to remove existing database information\r\n  // # idTodelete = _id from database\r\n  deleteByIdFromDB = idTodelete => {\r\n    axios.delete(this.props.api + \"/deleteByIdData\", {\r\n      data: { id: idTodelete }\r\n    });\r\n  };\r\n\r\n  search = (type, input) => {\r\n    var books = [];\r\n    this.state.data.map(book => {\r\n      if (book[type] && book[type].toLowerCase().includes(input.toLowerCase()))\r\n        books.push(book);\r\n    });\r\n    this.setState({ display: books, \r\n      pages: this.getArray(books, 0, (this.state.pageSize < books.length ? this.state.pageSize : books.length)),\r\n      itemIndex: 0,\r\n      pageCount: 1,\r\n      totalPage: Math.ceil(books.length / this.state.pageSize) });\r\n  }\r\n\r\n  pageButton = (books, amount) =>{\r\n    if (amount < 0 && this.state.itemIndex > 0) {\r\n      var postIndex = (this.state.itemIndex + amount) < this.state.pageSize ? 0 : (this.state.itemIndex + amount);\r\n      var postBooks = (postIndex < this.state.pageSize) ? this.state.pageSize : this.state.itemIndex;\r\n      this.setState({pages: this.getArray(books, postIndex, postBooks),\r\n        itemIndex: postIndex,\r\n        pageCount: this.state.pageCount - 1\r\n      });  \r\n    }\r\n    else if (amount > 0 && this.state.itemIndex + amount < books.length){\r\n      var postIndex = this.state.itemIndex + amount;\r\n      var postBooks = (postIndex+this.state.pageSize) < books.length ? postIndex + this.state.pageSize : books.length;\r\n      this.setState({\r\n        pages: this.getArray(books, postIndex, postBooks),\r\n        itemIndex: postIndex,\r\n        pageCount: this.state.pageCount + 1\r\n        });  \r\n    }\r\n  };\r\n\r\n  getArray = (books, start, end) =>{\r\n    var list = [];\r\n    for(var i=0; i<books.length; i++){\r\n      if (i >= start && i < end){\r\n        list.push(books[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  resetSearch = () =>{\r\n    this.setState({ display: this.state.data, \r\n      pages: this.getArray(this.state.data,0, (this.state.pageSize < this.state.data.length ? this.state.pageSize : this.state.data.length)),\r\n      itemIndex: 0,\r\n      pageCount: 1,\r\n      input: \"\",\r\n      totalPage: Math.ceil(this.state.data.length / this.state.pageSize) });\r\n    document.getElementById(\"searchInput\").value = \"\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ paddingLeft: \"38%\" }}>\r\n          <NavDropdown title={this.state.searchType} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item\r\n              href=\"#action/3.1\"\r\n              onClick={() => {\r\n                this.setState({ searchType: \"title\" });\r\n                this.resetSearch();\r\n              }}\r\n            >\r\n              title\r\n            </NavDropdown.Item>\r\n            <NavDropdown.Item\r\n              href=\"#action/3.2\"\r\n              onClick={() => {\r\n                this.setState({ searchType: \"course\" });\r\n                this.resetSearch();\r\n              }}\r\n            >\r\n              course\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n          <input\r\n            style={{width: \"45%\"}}\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            placeholder=\"Search\"\r\n            className=\"mr-sm-2\"\r\n            onChange={e => {\r\n              this.search(this.state.searchType, e.target.value);\r\n            }}\r\n          />\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            variant=\"outline-primary\"\r\n            onClick={() => {\r\n              this.resetSearch();\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </div>\r\n        <hr/>\r\n\r\n        <div>\r\n          {this.state.pages.map(book => (\r\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\r\n          ))}\r\n        </div>\r\n        <hr />\r\n        <div style={{ margin: \"5px\", marginLeft: \"38%\" }}>\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            onClick={() => {\r\n              this.pageButton(this.state.display, -(this.state.pageSize));\r\n            }}\r\n          >\r\n            Previous Page\r\n          </Button>\r\n          <h1 style={{ display:  \"inline\"}}>Page: {this.state.pageCount}</h1>\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            onClick={() => {\r\n              this.pageButton(this.state.display, this.state.pageSize);\r\n            }}\r\n          >\r\n            Next Page\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React, { Component } from \"react\";\r\n\r\nclass pageButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setNext = this.setNext.bind(this);\r\n    this.setUp = this.setUp.bind(this);\r\n    this.state = {\r\n      num: 0,\r\n      pagenum: this.props.current\r\n    };\r\n  }\r\n\r\n  setNext() {\r\n    if (this.state.pagenum < this.props.totalPage) {\r\n      this.setState(\r\n        {\r\n          num: this.state.num + this.props.pageSize,\r\n          pagenum: this.state.pagenum + 1\r\n        },\r\n        function() {\r\n          console.log(this.state);\r\n          this.props.pageNext(this.state.num);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  setUp() {\r\n    if (this.state.pagenum > 1) {\r\n      console.log(this.state.pagenum);\r\n      this.setState(\r\n        {\r\n          num: this.state.num - this.props.pageSize,\r\n          pagenum: this.state.pagenum - 1\r\n        },\r\n        function() {\r\n          console.log(this.state);\r\n          this.props.pageNext(this.state.num);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.setUp}>Previous Page</button>\r\n        <span>\r\n          {this.state.pagenum}page/ {this.props.totalPage}page\r\n        </span>\r\n        <button onClick={this.setNext}>Next Page</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default pageButton;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass AddBook extends Component {\r\n  state = { title: null, price: null, course: null, url: null, owner: null };\r\n\r\n  // our put method that uses our backend api\r\n  // to create new query into our data base\r\n  // # json = json object\r\n  putDataToDB = json => {\r\n    axios\r\n      .post(this.props.api + \"/putData\", json)\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"10px\", display: \"grid\" }}>\r\n        <label>\r\n          Book title:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ title: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Book Price:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ price: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Course:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ course: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Image URL:\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ url: e.target.value })}\r\n            placeholder=\"\"\r\n            style={{ width: \"200px\" }}\r\n          />\r\n        </label>\r\n        <button\r\n          style={{ width: \"200px\" }}\r\n          onClick={() => {\r\n            // this.props.setAccount();\r\n            this.putDataToDB({\r\n              title: this.state.title,\r\n              price: this.state.price,\r\n              course: this.state.course,\r\n              url: this.state.url,\r\n              owner: this.props.username\r\n            });\r\n          }}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddBook;\r\n","import React, { Component } from \"react\";\r\nimport AddBook from \"./addBook\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport axios from \"axios\";\r\n\r\nclass AccountPage extends Component {\r\n  state = {\r\n    buttonClass: \"btn btn-secondary\",\r\n    buttonClassOp: [\"btn btn-secondary\", \"btn btn-primary\"],\r\n    name: this.props.user.firstname,\r\n    email: this.props.user.email,\r\n    currentSellingBook: [],\r\n    intervalIsSet: null,\r\n    userInfo: [\r\n      {\r\n        Header: \"Username\",\r\n        accessor: \"name\"\r\n      },\r\n      {\r\n        Header: \"Email\",\r\n        accessor: \"email\"\r\n      }\r\n    ],\r\n    password: \"\",\r\n    newPassword: \"\"\r\n  };\r\n\r\n  // when component mounts, first thing it does is fetch all existing data in our db\r\n  // then we incorporate a polling logic so that we can easily see if our db has\r\n  // changed and implement those changes into our UI\r\n  componentDidMount() {\r\n    this.getMyCurrentSellingBook();\r\n\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getMyCurrentSellingBook, 1000);\r\n      this.setState({ intervalIsSet: interval });\r\n    }\r\n  }\r\n\r\n  // never let a process live forever\r\n  // always kill a process everytime we are done using it\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({ intervalIsSet: null });\r\n    }\r\n  }\r\n\r\n  //new function for getting current selling book\r\n  getMyCurrentSellingBook = () => {\r\n    axios\r\n      .post(this.props.api + \"/search\", {\r\n        owner: this.props.user.username\r\n      })\r\n      .then(res => {\r\n        this.setState({ currentSellingBook: res.data.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  addInter = obj => {\r\n    axios\r\n      .post(this.props.api +\"/putInterests\", obj)\r\n      .then(res => {\r\n        if (!res.data.success) {\r\n          console.log(res.data.message);\r\n        } else {\r\n          console.log(res.data.message);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  updatePassword = (oldPass, newPass) => {\r\n    axios\r\n      .post(this.props.api + \"/changePassword\", {\r\n        username: this.props.user.username,\r\n        password: oldPass,\r\n        newPassword: newPass\r\n      })\r\n      .then(res => {\r\n        if (res.data.success) alert(\"Password Update Successfully!\");\r\n        else alert(\"Incorrect Password!\");\r\n        this.props.signOut();\r\n        return res.data;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 style={{ textAlign: \"center\" }}>\r\n          Welcome {this.props.user.firstname + \" \" + this.props.user.lastname}\r\n        </h1>\r\n        <table style={{ textAlign: \"center\" }}>\r\n          <tr>\r\n            <th>Your username</th>\r\n            <th>Your account email</th>\r\n          </tr>\r\n          <tr>\r\n            <td>{this.props.user.username}</td>\r\n            <td>{this.props.user.email}</td>\r\n          </tr>\r\n        </table>\r\n        <details>\r\n          <summary>Change Password</summary>\r\n          <label>\r\n            Current Password:\r\n            <input\r\n              type=\"text\"\r\n              onChange={e => this.setState({ password: e.target.value })}\r\n              placeholder=\"\"\r\n              style={{ width: \"200px\" }}\r\n            />\r\n          </label>\r\n          <label>\r\n            New Password:\r\n            <input\r\n              type=\"text\"\r\n              onChange={e => this.setState({ newPassword: e.target.value })}\r\n              placeholder=\"\"\r\n              style={{ width: \"200px\" }}\r\n            />\r\n          </label>\r\n          <button\r\n            onClick={() => {\r\n              this.updatePassword(this.state.password, this.state.newPassword);\r\n            }}\r\n          >\r\n            Update Password\r\n          </button>\r\n        </details>\r\n        <hr />\r\n        <h2 style={{ textAlign: \"center\" }}>Selects your interests of book:</h2>\r\n        <div>\r\n          <button\r\n            style={{ margin: \"5px\" }}\r\n            type=\"button\"\r\n            class={this.state.buttonClass}\r\n            onClick={() => {\r\n              this.addInter({\r\n                course: \"English\",\r\n                username: this.props.user.username\r\n              });\r\n              this.props.updateInter(\"English\");\r\n              this.props.randomBook();\r\n            }}\r\n          >\r\n            English\r\n          </button>\r\n          <button\r\n            style={{ margin: \"5px\" }}\r\n            type=\"button\"\r\n            class={this.state.buttonClass}\r\n            onClick={() => {\r\n              this.addInter({\r\n                course: \"CSE\",\r\n                username: this.props.user.username\r\n              });\r\n              this.props.updateInter(\"CSE\");\r\n              this.props.randomBook();\r\n            }}\r\n          >\r\n            CSE\r\n          </button>\r\n          <button\r\n            style={{ margin: \"5px\" }}\r\n            type=\"button\"\r\n            class={this.state.buttonClass}\r\n            onClick={() => {\r\n              this.addInter({\r\n                course: \"History\",\r\n                username: this.props.user.username\r\n              });\r\n              this.props.updateInter(\"History\");\r\n              this.props.randomBook();\r\n            }}\r\n          >\r\n            History\r\n          </button>\r\n\r\n          <span />\r\n        </div>\r\n\r\n        <hr />\r\n        <h2 style={{ textAlign: \"center\" }}>\r\n          Here is the book you are currently selling\r\n        </h2>\r\n\r\n        <div>\r\n          {this.state.currentSellingBook.map(book => (\r\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\r\n          ))}\r\n        </div>\r\n\r\n        <AddBook username={this.props.user.username} api={this.props.api} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoginWrapper = styled.div`\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const LoginBox = styled.div`\r\n  width: 320px;\r\n  height: 370px;\r\n  background: radial-gradient(\r\n    ellipse farthest-corner at center top,\r\n    #1e90ff 0%,\r\n    #a9bcd0 100%\r\n  );\r\n  padding: 50px 30px;\r\n  color: white;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 260px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  padding: 0 10px;\r\n  margin: 10px auto;\r\n  color: #777;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 220px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  color: #fff;\r\n  background: #ff0000;\r\n  border-radius: 15px;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { LoginWrapper, LoginBox, Input, Button } from \"./loginStyle\";\r\nimport axios from \"axios\";\r\nimport Body from \"./body\";\r\n\r\nclass ResetPass extends Component {\r\n    state = { username: null, email: null }\r\n\r\n    resetPassword = () => {\r\n        axios.post(this.props.api+\"/forgetPassword\", {username: this.state.username, email: this.state.email})\r\n        .then(res=>{\r\n            if (res.data.success){\r\n                alert(\"Email Sent. Please check your email.\");\r\n                this.props.setContent(<Body api={this.props.api}/>);\r\n            }\r\n            else{\r\n                alert(\"Username or Email is incorrect!\");\r\n            }\r\n            return res.data;\r\n        })\r\n    };\r\n\r\n    render() { \r\n        return ( <React.Fragment>\r\n            <LoginWrapper>\r\n              <LoginBox>\r\n                <h1>Reset Password:</h1>\r\n                <label>\r\n                  Username:\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={e => this.setState({ username: e.target.value })}\r\n                    placeholder=\"username\"\r\n                  />\r\n                </label>\r\n                <label>\r\n                  Email:\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={e => this.setState({ email: e.target.value })}\r\n                    placeholder=\"email\"\r\n                  />\r\n                </label>\r\n                <Button\r\n                  onClick={() =>{\r\n                    this.resetPassword();\r\n                  }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </LoginBox>\r\n            </LoginWrapper>\r\n          </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default ResetPass;","import React, { Component } from \"react\";\r\nimport { LoginWrapper, LoginBox, Input, Button } from \"./loginStyle\";\r\nimport axios from \"axios\";\r\nimport ResetPass from './resetPass';\r\n\r\nclass login extends Component {\r\n  state = { username: \"\", password: \"\" };\r\n\r\n  LogintoDB = json => {\r\n    axios\r\n      .post(this.props.api +\"/login\", json)\r\n      .then(res => {\r\n        if (!res.data.success && res.data.user == null) {\r\n          alert(\"Username or Password is incorrect.\");\r\n          return 0;\r\n        }\r\n        this.props.login(res.data.user);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <LoginWrapper>\r\n          <LoginBox>\r\n            <h1>Login Page</h1>\r\n            <label>\r\n              Username:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ username: e.target.value })}\r\n                placeholder=\"username\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.setState({ password: e.target.value })}\r\n                placeholder=\"password\"\r\n              />\r\n            </label>\r\n            <Button\r\n              onClick={() =>\r\n                this.LogintoDB({\r\n                  username: this.state.username,\r\n                  password: this.state.password\r\n                })\r\n              }\r\n            >\r\n              Login to System\r\n            </Button>\r\n            <a onClick={()=>this.props.setContent(<ResetPass setContent={this.props.setContent} api={this.props.api}/>)}>Forget Password?</a>\r\n          </LoginBox>\r\n        </LoginWrapper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RegisterWrapper = styled.div`\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const RegisterBox = styled.div`\r\n  width: 320px;\r\n  height: 550px;\r\n  background: radial-gradient(\r\n    ellipse farthest-corner at center top,\r\n    #1e90ff 0%,\r\n    #a9bcd0 100%\r\n  );\r\n  padding: 50px 30px;\r\n  color: white;\r\n  box-sizing: border-box;\r\n  vertical-align: middle;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  width: 140%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 255px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  color: #fff;\r\n  background: #ff0000;\r\n  border-radius: 5px;\r\n  margin: 10px auto;\r\n  text-align: center;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { RegisterWrapper, RegisterBox, Input, Button } from \"./registerStyle\";\r\nimport axios from \"axios\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    username: null,\r\n    email: null,\r\n    firstname: null,\r\n    lastname: null,\r\n    password: null\r\n  };\r\n\r\n  putDataToUserDB = json => {\r\n    axios\r\n      .post(this.props.api+\"/putUser\", json)\r\n      .then(res => {\r\n        if (res.data.success) {\r\n          alert(\"Register Successfully\");\r\n          this.props.login(json);\r\n        } else alert(\"User already exist.\");\r\n        console.log(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RegisterWrapper>\r\n          <RegisterBox>\r\n            <h1> Register Page</h1>\r\n            <label>\r\n              Username:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ username: e.target.value })}\r\n                placeholder=\"username\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Email:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ email: e.target.value })}\r\n                placeholder=\"email\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Firstname:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ firstname: e.target.value })}\r\n                placeholder=\"firstname\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Lastname:\r\n              <Input\r\n                type=\"text\"\r\n                onChange={e => this.setState({ lastname: e.target.value })}\r\n                placeholder=\"lastname\"\r\n              />\r\n            </label>\r\n            <label>\r\n              Password:\r\n              <Input\r\n                type=\"password\"\r\n                onChange={e => this.setState({ password: e.target.value })}\r\n                placeholder=\"password\"\r\n              />\r\n            </label>\r\n            <Button\r\n              onClick={() =>\r\n                this.putDataToUserDB({\r\n                  username: this.state.username,\r\n                  email: this.state.email,\r\n                  firstname: this.state.firstname,\r\n                  lastname: this.state.lastname,\r\n                  password: this.state.password,\r\n                  interestsList: []\r\n                })\r\n              }\r\n            >\r\n              Register\r\n            </Button>\r\n          </RegisterBox>\r\n        </RegisterWrapper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport axios from \"axios\";\r\nimport AccountPage from \"./accountPage\";\r\nclass InterestsPage extends Component {\r\n  state = {\r\n    data: [],\r\n    intervalIsSet: null\r\n  };\r\n\r\n  getDataFromDb = obj => {\r\n    axios\r\n      .post(this.props.api + \"/guessYouLike\", obj)\r\n      .then(res => {\r\n        this.state.data[0] = res.data.data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.randomBook.map(book => (\r\n          <BookCardInfo key={book._id} bookInfo={book} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default InterestsPage;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass reportPage extends Component {\r\n  reportSend = () => {\r\n    axios.post(this.props.api + \"/report\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 style={{ textAlign: \"center\" }}> Report Someone</h1> <br />\r\n        <form\r\n          style={{ textAlign: \"center\" }}\r\n          method=\"POST\"\r\n          action=\"mailto:xliu72@buffalo.edu\"\r\n        >\r\n          <label>\r\n            Seller Username:\r\n            <input type=\"text\" name=\"sellerName\" />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Seller Email:\r\n            <input type=\"text\" name=\"sellerEmail\" />\r\n          </label>\r\n          <br />\r\n\r\n          <label>\r\n            Book Name:\r\n            <input type=\"text\" name=\"bookName\" />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Reason of report:\r\n            <br />\r\n            <textarea rows=\"4\" cols=\"50\" name=\"comment\" form=\"usrform\" />\r\n          </label>\r\n          <br />\r\n\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reportPage;\r\n","import React, { Component } from \"react\";\r\nimport StickyHeader from \"react-headroom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport AccountPage from \"./accountPage\";\r\nimport Body from \"./body\";\r\nimport Login from \"./login\";\r\nimport Register from \"./register\";\r\nimport axios from \"axios\";\r\nimport BookCardInfo from \"./bookCardInfo\";\r\nimport InterestsPage from \"./interestsPage\";\r\nimport { setTimeout } from \"timers\";\r\nimport ReportPage from \"./reportPage\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    input: null,\r\n    user: null,\r\n    topRight: null,\r\n    randomBook: [],\r\n    currInterests: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setTopRight(\r\n      <React.Fragment>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() =>\r\n            this.props.setContent(\r\n              <Login\r\n                setContent={this.props.setContent}\r\n                login={this.login}\r\n                api={this.props.api}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() =>\r\n            this.props.setContent(\r\n              <Register login={this.login} api={this.props.api} />\r\n            )\r\n          }\r\n        >\r\n          Register\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  setTopRight = content => {\r\n    this.setState({\r\n      topRight: content\r\n    });\r\n  };\r\n\r\n  login = users => {\r\n    if (users == null) {\r\n      this.props.setContent(\r\n        <Login\r\n          setContent={this.props.setContent}\r\n          login={this.login}\r\n          api={this.props.api}\r\n        />\r\n      );\r\n      return 0;\r\n    }\r\n\r\n    this.setState({ user: users, currInterests: users.interestsList });\r\n    this.randomBook();\r\n    this.props.setContent(\r\n      <AccountPage\r\n        user={users}\r\n        api={this.props.api}\r\n        signOut={this.signOut}\r\n        updateInter={this.updateInter}\r\n        randomBook={this.randomBook}\r\n      />\r\n    );\r\n    this.setTopRight(\r\n      <Button\r\n        style={{ margin: \"5px\" }}\r\n        variant=\"outline-primary\"\r\n        onClick={() => this.signOut()}\r\n      >\r\n        Sign Out\r\n      </Button>\r\n    );\r\n    return 1;\r\n  };\r\n\r\n  signOut = () => {\r\n    this.props.setContent(<Body api={this.props.api} />);\r\n    this.setState({ user: null, currInterests: [], randomBook: [] });\r\n    this.setTopRight(\r\n      <React.Fragment>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() =>\r\n            this.props.setContent(\r\n              <Login\r\n                setContent={this.props.setContent}\r\n                login={this.login}\r\n                api={this.props.api}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          Login\r\n        </Button>\r\n        <Button\r\n          style={{ margin: \"5px\" }}\r\n          variant=\"outline-primary\"\r\n          onClick={() =>\r\n            this.props.setContent(\r\n              <Register login={this.login} api={this.props.api} />\r\n            )\r\n          }\r\n        >\r\n          Register\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  //display random books using current user interests\r\n  randomBook = () => {\r\n    if (this.state.user == null) {\r\n      return false; //error?\r\n    } else {\r\n      let interList = this.state.currInterests;\r\n      let localRandomBook = [];\r\n      let localTime = 0;\r\n      var api = this.props.api;\r\n      for (let i = 0; i < interList.length; i++) {\r\n        setTimeout(function() {\r\n          axios\r\n            .post(api + \"/search\", { course: interList[i] })\r\n            .then(res => {\r\n              localTime = res.data.data.length;\r\n              if (res.data.data.legnth == 1) {\r\n                localRandomBook.push(res.data.data[0]);\r\n              } else {\r\n                let random1 = Math.floor(\r\n                  Math.random() * Math.floor(res.data.data.length)\r\n                );\r\n                let random2 = Math.floor(\r\n                  Math.random() * Math.floor(res.data.data.length)\r\n                );\r\n                while (random2 == random1) {\r\n                  random2 = Math.floor(\r\n                    Math.random() * Math.floor(res.data.data.length)\r\n                  );\r\n                }\r\n                localRandomBook.push(res.data.data[random1]);\r\n                localRandomBook.push(res.data.data[random2]);\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n        }, localTime);\r\n      }\r\n\r\n      //after for loop\r\n      this.setState({ randomBook: localRandomBook });\r\n    }\r\n  };\r\n\r\n  updateInter = obj => {\r\n    let tempInter = this.state.currInterests;\r\n    if (!tempInter.includes(obj)) {\r\n      tempInter.push(obj);\r\n    }\r\n    for (let i = 0; i < tempInter.length; i++) {\r\n    }\r\n    this.setState({ currInterests: tempInter });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Navbar\r\n        bg=\"navbar navbar-dark bg-dark\"\r\n        expand=\"lg\"\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        <Navbar.Brand href=\"#home\">\r\n          UB Platform\r\n          <img\r\n            src=\"https://img.icons8.com/doodle/48/000000/books.png\"\r\n            style={{ width: 30 }}\r\n          />\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link\r\n              href=\"#home\"\r\n              onSelect={() => {\r\n                this.props.setContent(<Body api={this.props.api} />);\r\n              }}\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"#accountPage\"\r\n              onSelect={() => {\r\n                this.login(this.state.user);\r\n              }}\r\n            >\r\n              Account\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              href=\"#reportPage\"\r\n              onSelect={() => {\r\n                this.props.setContent(<ReportPage />);\r\n              }}\r\n            >\r\n              Report\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              href=\"#InterestsPage\"\r\n              onSelect={() => {\r\n                //this.randomBook();\r\n                //this.updateInterPage();\r\n                this.props.setContent(\r\n                  <InterestsPage\r\n                    api={this.props.api}\r\n                    randomBook={this.state.randomBook}\r\n                  />\r\n                );\r\n              }}\r\n            >\r\n              InterestsPage\r\n            </Nav.Link>\r\n          </Nav>\r\n          <Form inline>{this.state.topRight}</Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PolicyPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>\r\n          <strong>UBPLATFORM PRIVACY POLICY</strong>\r\n          <br />\r\n          <br />\r\n          Last updated [03/26/2019] <br />\r\n          <br />\r\n          <strong>INTRODUCTION </strong> <br />\r\n          UBPlatform respects the privacy of our users. This Privacy Policy\r\n          explains how we collect, use, disclose, and safeguard your information\r\n          when you visit our website www.ubplatform.com including any other\r\n          media form, media channel, mobile website, or mobile application\r\n          related or connected there to www.ubplatform.com. Please read this\r\n          privacy policy carefully. If you do not agree with the terms of this\r\n          privacy policy, please do not access the site. We reserve the right to\r\n          make changes to this Privacy Policy at any time and for any reason. We\r\n          will alert you about any changes by updating the “Last Updated” date\r\n          of this Privacy Policy. Any changes or modifications will be effective\r\n          immediately upon posting the updated Privacy Policy on the Site, and\r\n          you waive the right to receive specific notice of each such change or\r\n          modification. You are encouraged to periodically review this Privacy\r\n          Policy to stay informed of updates. You will be deemed to have been\r\n          made aware of, will be subject to, and will be deemed to have accepted\r\n          the changes in any revised Privacy Policy by your continued use of the\r\n          Site after the date such revised Privacy Policy is posted. <br />\r\n          <hr />\r\n          <strong>Privacy Policy</strong>\r\n          <br />\r\n          <br />\r\n          This privacy policy discloses the privacy practices for\r\n          www.ubplatform.com. This privacy policy applies solely to information\r\n          collected by this web site. It will notify you of the following:\r\n          <br /> 1. What personally identifiable information is collected from\r\n          you through the web site. how it is used and with whom it may be\r\n          shared. <br /> 2. What choices are available to you regarding the use\r\n          of your data. <br /> 3. The security procedures in place to protect\r\n          the misuse of your information. <br />\r\n          4. How you can correct any inaccuracies in the information.\r\n          Information Collection, Use, and Sharing We are the sole owners of the\r\n          information collected on this site. <br />\r\n          We only have access to/collect information that you voluntarily give\r\n          us via email or other direct contact from you. We will not sell or\r\n          rent this information to anyone. We will use your information to\r\n          respond to you, regarding the reason you contacted us. We will not\r\n          share your information with any third party outside of our\r\n          organization, other than as necessary to fulfill your request. e.g. to\r\n          ship an order. Unless you ask us not to, we may contact you via email\r\n          in the future to tell you about specials, new products or services, or\r\n          changes to this privacy policy.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PolicyPage;\r\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport PolicyPage from \"./policyPage.jsx\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./footerStyle.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <footer className=\"page-footer bg-dark\">\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\" style={{ color: \"white\" }}>\r\n                <h5 className=\"text-uppercase\">Contact US</h5>\r\n                <p>Email: Please contact us xliu72@buffalo.edu</p>\r\n                <p>Phone: 4152839557</p>\r\n              </div>\r\n\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\r\n                  Career Page\r\n                </h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Join Team</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Seek Career</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\r\n                  See Team\r\n                </h5>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"#!\">Post Question</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#!\">Seek Question</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Nav>\r\n            <Nav.Link\r\n              href=\"#policyPage\"\r\n              onSelect={() => {\r\n                this.props.setContent(<PolicyPage />);\r\n              }}\r\n            >\r\n              Policy\r\n            </Nav.Link>\r\n          </Nav>\r\n          <div\r\n            className=\"footer-copyright text-center py-3\"\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <p>© 2019 Copyright</p>\r\n            <a href=\"https://www.google.com/\"> www.ubplatform.com</a>\r\n          </div>\r\n          <div class=\"icon\">\r\n            <SocialIcon url=\"http://twitter.com/\" />\r\n            <SocialIcon url=\"http://facebook.com/\" />\r\n            <SocialIcon url=\"http://linkedin.com/\" />\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Body from \"./components/body\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport InterestsPage from \"./components/interestsPage\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends Component {\r\n  // initialize our state\r\n  state = {\r\n    api: \"http://3.18.110.2:3001/api\",\r\n    content: null,\r\n    deleteByIdFromDB: null,\r\n    book: [\r\n      {\r\n        title: \"Harry Potter\",\r\n        price: \"$2\",\r\n        course: \"CSE442\",\r\n        url:\r\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\r\n      },\r\n      {\r\n        title: \"Harry Potter\",\r\n        price: \"$20\",\r\n        course: \"CSE442\",\r\n        url:\r\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ content: <Body api={this.state.api} /> });\r\n  }\r\n\r\n  //Warning! This is use for test purpose, This will delete all data in database\r\n  deleteAll = () => {\r\n    this.state.data.forEach(dat => {\r\n      axios.delete(this.state.api + \"/deleteByIdData\", {\r\n        data: {\r\n          id: dat._id\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  //This method allow to add multiple book at once\r\n  // arrBook = array of JSON that contain book information (see dataschema for detail)\r\n  addAll = arrBook => {\r\n    arrBook.forEach(bok => {\r\n      axios.post(this.state.api + \"/putData\", bok);\r\n    });\r\n  };\r\n\r\n  setContent = obj => {\r\n    this.setState({ content: obj });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ backgroundColor: \"white\" }}>\r\n        <Header setContent={this.setContent} api={this.state.api} />\r\n        {/* <button onClick={this.deleteAll}>Delete All Book</button> */}\r\n        {this.state.content}\r\n        <Footer setContent={this.setContent} api={this.state.api} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}