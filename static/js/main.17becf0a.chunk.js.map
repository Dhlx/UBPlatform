{"version":3,"sources":["components/bookCardInfo.jsx","components/body.jsx","components/pageButton.jsx","components/addBook.jsx","components/accountPage.jsx","components/loginStyle.js","components/resetPass.jsx","components/login.jsx","components/registerStyle.js","components/register.jsx","components/interestsPage.jsx","components/header.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["BookCardInfo","state","id","_this","props","bookInfo","_id","modalIsOpen","openModal","setState","closeModal","react_default","a","createElement","className","style","display","width","height","src","this","url","alt","title","course","price","class","onClick","bind","Modal","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","ModalHeader","ModalBody","owner","ModalFooter","Component","Body","data","intervalIsSet","pages","itemIndex","pageCount","pageSize","input","searchType","getDataFromDb","fetch","api","then","json","res","deleteByIdFromDB","idTodelete","axios","delete","pageButton","books","amount","postBooks","postIndex","getArray","length","start","end","list","i","push","resetSearch","totalPage","Math","ceil","document","getElementById","value","_this2","setTimeout","interval","setInterval","clearInterval","type","map","book","toLowerCase","includes","_this3","paddingLeft","NavDropdown","Item","href","placeholder","onChange","e","search","target","Button","margin","variant","marginLeft","bookCardInfo","key","AddBook","putDataToDB","post","console","log","catch","err","padding","username","AccountPage","buttonClass","buttonClassOp","name","user","firstname","email","currentSellingBook","userInfo","Header","accessor","password","newPassword","getMyCurrentSellingBook","addInter","obj","success","message","updatePassword","oldPass","newPass","alert","signOut","Fragment","textAlign","lastname","updateInter","randomBook","addBook","LoginWrapper","styled","div","_templateObject","LoginBox","_templateObject2","Input","_templateObject3","button","_templateObject4","ResetPass","resetPassword","setContent","body","loginStyle_Button","login","LogintoDB","resetPass","RegisterWrapper","registerStyle_templateObject","RegisterBox","registerStyle_templateObject2","registerStyle_templateObject3","registerStyle_templateObject4","Register","putDataToUserDB","registerStyle_Input","registerStyle_Button","interestsList","InterestsPage","topRight","currInterests","setTopRight","content","users","components_login","accountPage","register","interList","localRandomBook","localTime","_loop","legnth","random1","floor","random","random2","tempInter","Navbar","bg","expand","marginBottom","Brand","Toggle","aria-controls","Collapse","Nav","Link","onSelect","interestsPage","Form","inline","Footer","color","App","deleteAll","forEach","dat","addAll","arrBook","bok","backgroundColor","header","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17becf0a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  UncontrolledPopover,\n  PopoverHeader,\n  PopoverBody\n} from \"reactstrap\";\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from \"reactstrap\";\n\nclass BookCardInfo extends Component {\n  state = {\n    id: this.props.bookInfo._id,\n    modalIsOpen: false\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  render() {\n    return (\n      <div className=\"col-lg-2\" style={{ display: \"inline-table\" }}>\n        <div className=\"card\">\n          <div className=\"badge badge-dark\">\n            <img\n              style={{ width: 300, height: \"100%\" }}\n              src={this.props.bookInfo.url}\n              alt=\"Logo\"\n            />\n            <h5 className=\"card-title\">\n              Book Name: {this.props.bookInfo.title}\n            </h5>\n            <p className=\"card-text\">Course: {this.props.bookInfo.course}</p>\n            <p>Price: {this.props.bookInfo.price}</p>\n\n            {/* <button\n                onClick={() => {\n                  this.props.deleteByIdFromDB(this.props.bookInfo._id);\n                }}\n              >\n                Delete This Book\n              </button> */}\n\n            {/* <button onClick={this.openModal}>Open Modal</button> */}\n\n            <button class=\"btn btn-primary\" onClick={this.openModal.bind(this)}>\n              More details\n            </button>\n            <Modal\n              isOpen={this.state.modalIsOpen}\n              onAfterOpen={this.afterOpenModal}\n              onRequestClose={this.closeModal}\n              contentLabel=\"Example Modal\"\n            >\n              <ModalHeader> Book Details </ModalHeader>\n              <ModalBody>\n                <div>Book Author: </div>\n                <h5> Junjie Chen</h5>\n\n                <div>Book edition: </div>\n                <h5> Third edition</h5>\n\n                <div>Book Owner: </div>\n                <h5> {this.props.bookInfo.owner}</h5>\n\n                <div>Book contact Info: </div>\n                <h5> yzou8@buffalo.edu</h5>\n\n                <div>Book Price: </div>\n                <h5> {this.props.bookInfo.price}</h5>\n                <div>Book Descrption: </div>\n                <h5>\n                  {\" \"}\n                  Features: 200 hard puzzles Big grids for easy solving\n                  Introduction by legendary puzzlemaster Will Shortz\n                </h5>\n              </ModalBody>\n              <ModalFooter>\n                <button class=\"btn btn-primary\" onClick={this.closeModal}>\n                  close\n                </button>\n              </ModalFooter>\n            </Modal>\n          </div>\n        </div>\n\n        {/* <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          data-toggle=\"modal\"\n          data-target=\".bd-example-modal-sm\"\n        >\n          Small modal\n        </button>\n        <Modal isOpen={false}>\n          <ModalHeader> Modal Title </ModalHeader>\n        </Modal> */}\n      </div>\n    );\n  }\n}\n\nexport default BookCardInfo;\n","import React, { Component } from \"react\";\nimport BookCardInfo from \"./bookCardInfo\";\nimport axios from \"axios\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport PageButton from \"./pageButton\";\n\nclass Body extends Component {\n  state = {\n    data: [],\n    intervalIsSet: null,\n    display: [],\n    pages: [],\n    itemIndex: 0,\n    pageCount: 1,\n    pageSize: 8,\n    input: \"\",\n    searchType: \"title\"\n  };\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n    //Need better implementation for this in case of slow internet connection\n\n    setTimeout(() => {\n      this.setState({ display: this.state.data,\n        pages: this.getArray(this.state.data, 0,this.state.pageSize < this.state.data.length ? this.state.pageSize : this.state.data.length),\n        totalPage: Math.ceil(this.state.data.length / this.state.pageSize) });\n    }, 500);\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n  // # see this.state.data\n\n  getDataFromDb = () => {\n    fetch(this.props.api + \"/getData\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n\n  // to remove existing database information\n  // # idTodelete = _id from database\n  deleteByIdFromDB = idTodelete => {\n    axios.delete(this.props.api + \"/deleteByIdData\", {\n      data: { id: idTodelete }\n    });\n  };\n\n  search(type, input) {\n    var books = [];\n    this.state.data.map(book => {\n      if (book[type] && book[type].toLowerCase().includes(input))\n        books.push(book);\n    });\n    this.setState({ display: books, \n      pages: this.getArray(books, 0, (this.state.pageSize < books.length ? this.state.pageSize : books.length)),\n      itemIndex: 0,\n      pageCount: 1,\n      totalPage: Math.ceil(books.length / this.state.pageSize) });\n  }\n\n  pageButton = (books, amount) =>{\n    if (amount < 0 && this.state.itemIndex > 0) {\n      var postIndex = (this.state.itemIndex + amount) < this.state.pageSize ? 0 : (this.state.itemIndex + amount);\n      var postBooks = (postIndex < this.state.pageSize) ? this.state.pageSize : this.state.itemIndex;\n      this.setState({pages: this.getArray(books, postIndex, postBooks),\n        itemIndex: postIndex,\n        pageCount: this.state.pageCount - 1\n      });  \n    }\n    else if (amount > 0 && this.state.itemIndex + amount < books.length){\n      var postIndex = this.state.itemIndex + amount;\n      var postBooks = (postIndex+this.state.pageSize) < books.length ? postIndex + this.state.pageSize : books.length;\n      this.setState({\n        pages: this.getArray(books, postIndex, postBooks),\n        itemIndex: postIndex,\n        pageCount: this.state.pageCount + 1\n        });  \n    }\n  };\n\n  getArray = (books, start, end) =>{\n    var list = [];\n    for(var i=0; i<books.length; i++){\n      if (i >= start && i < end){\n        list.push(books[i]);\n      }\n    }\n    return list;\n  }\n\n  resetSearch = () =>{\n    this.setState({ display: this.state.data, \n      pages: this.getArray(this.state.data,0, (this.state.pageSize < this.state.data.length ? this.state.pageSize : this.state.data.length)),\n      itemIndex: 0,\n      pageCount: 1,\n      input: \"\",\n      totalPage: Math.ceil(this.state.data.length / this.state.pageSize) });\n    document.getElementById(\"searchInput\").value = \"\";\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ paddingLeft: \"38%\" }}>\n          <NavDropdown title={this.state.searchType} id=\"basic-nav-dropdown\">\n            <NavDropdown.Item\n              href=\"#action/3.1\"\n              onClick={() => {\n                this.setState({ searchType: \"title\" });\n                this.resetSearch();\n              }}\n            >\n              title\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              href=\"#action/3.2\"\n              onClick={() => {\n                this.setState({ searchType: \"course\" });\n                this.resetSearch();\n              }}\n            >\n              course\n            </NavDropdown.Item>\n          </NavDropdown>\n          <input\n            style={{width: \"45%\"}}\n            type=\"text\"\n            id=\"searchInput\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            onChange={e => {\n              this.search(this.state.searchType, e.target.value);\n            }}\n          />\n          <Button\n            style={{ margin: \"5px\" }}\n            variant=\"outline-primary\"\n            onClick={() => {\n              this.resetSearch();\n            }}\n          >\n            Reset\n          </Button>\n        </div>\n        <hr />\n        <div style={{ margin: \"5px\", marginLeft: \"38%\" }}>\n          <Button\n            style={{ margin: \"5px\" }}\n            onClick={() => {\n              this.pageButton(this.state.display, -(this.state.pageSize));\n            }}\n          >\n            Previous Page\n          </Button>\n          <h1 style={{ display:  \"inline\"}}>Page: {this.state.pageCount}</h1>\n          <Button\n            style={{ margin: \"5px\" }}\n            onClick={() => {\n              this.pageButton(this.state.display, this.state.pageSize);\n            }}\n          >\n            Next Page\n          </Button>\n        </div>\n        <hr/>\n\n        <div>\n          {this.state.pages.map(book => (\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React, { Component } from \"react\";\n\nclass pageButton extends Component {\n  constructor(props) {\n    super(props);\n    this.setNext = this.setNext.bind(this);\n    this.setUp = this.setUp.bind(this);\n    this.state = {\n      num: 0,\n      pagenum: this.props.current\n    };\n  }\n\n  setNext() {\n    if (this.state.pagenum < this.props.totalPage) {\n      this.setState(\n        {\n          num: this.state.num + this.props.pageSize,\n          pagenum: this.state.pagenum + 1\n        },\n        function() {\n          console.log(this.state);\n          this.props.pageNext(this.state.num);\n        }\n      );\n    }\n  }\n\n  setUp() {\n    if (this.state.pagenum > 1) {\n      console.log(this.state.pagenum);\n      this.setState(\n        {\n          num: this.state.num - this.props.pageSize,\n          pagenum: this.state.pagenum - 1\n        },\n        function() {\n          console.log(this.state);\n          this.props.pageNext(this.state.num);\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.setUp}>Previous Page</button>\n        <span>\n          {this.state.pagenum}page/ {this.props.totalPage}page\n        </span>\n        <button onClick={this.setNext}>Next Page</button>\n      </div>\n    );\n  }\n}\nexport default pageButton;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass AddBook extends Component {\n  state = { title: null, price: null, course: null, url: null, owner: null };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  // # json = json object\n  putDataToDB = json => {\n    axios\n      .post(this.props.api + \"/putData\", json)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: \"10px\", display: \"grid\" }}>\n        <label>\n          Book title:\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ title: e.target.value })}\n            placeholder=\"\"\n            style={{ width: \"200px\" }}\n          />\n        </label>\n\n        <label>\n          Book Price:\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ price: e.target.value })}\n            placeholder=\"\"\n            style={{ width: \"200px\" }}\n          />\n        </label>\n\n        <label>\n          Course:\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ course: e.target.value })}\n            placeholder=\"\"\n            style={{ width: \"200px\" }}\n          />\n        </label>\n\n        <label>\n          Image URL:\n          <input\n            type=\"text\"\n            onChange={e => this.setState({ url: e.target.value })}\n            placeholder=\"\"\n            style={{ width: \"200px\" }}\n          />\n        </label>\n        <button\n          style={{ width: \"200px\" }}\n          onClick={() => {\n            // this.props.setAccount();\n            this.putDataToDB({\n              title: this.state.title,\n              price: this.state.price,\n              course: this.state.course,\n              url: this.state.url,\n              owner: this.props.username\n            });\n          }}\n        >\n          ADD\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddBook;\n","import React, { Component } from \"react\";\nimport AddBook from \"./addBook\";\nimport BookCardInfo from \"./bookCardInfo\";\nimport axios from \"axios\";\n\nclass AccountPage extends Component {\n  state = {\n    buttonClass: \"btn btn-secondary\",\n    buttonClassOp: [\"btn btn-secondary\", \"btn btn-primary\"],\n    name: this.props.user.firstname,\n    email: this.props.user.email,\n    currentSellingBook: [],\n    intervalIsSet: null,\n    userInfo: [\n      {\n        Header: \"Username\",\n        accessor: \"name\"\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\"\n      }\n    ],\n    password: \"\",\n    newPassword: \"\"\n  };\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getMyCurrentSellingBook();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getMyCurrentSellingBook, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  // never let a process live forever\n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  //new function for getting current selling book\n  getMyCurrentSellingBook = () => {\n    axios\n      .post(this.props.api + \"/search\", {\n        owner: this.props.user.username\n      })\n      .then(res => {\n        this.setState({ currentSellingBook: res.data.data });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  addInter = obj => {\n    axios\n      .post(\"http://localhost:3001/api/putInterests\", obj)\n      .then(res => {\n        if (!res.data.success) {\n          console.log(res.data.message);\n        } else {\n          console.log(res.data.message);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  updatePassword = (oldPass, newPass) => {\n    axios\n      .post(this.props.api + \"/changePassword\", {\n        username: this.props.user.username,\n        password: oldPass,\n        newPassword: newPass\n      })\n      .then(res => {\n        if (res.data.success) alert(\"Password Update Successfully!\");\n        else alert(\"Incorrect Password!\");\n        this.props.signOut();\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 style={{ textAlign: \"center\" }}>\n          Welcome {this.props.user.firstname + \" \" + this.props.user.lastname}\n        </h1>\n        <table style={{ textAlign: \"center\" }}>\n          <tr>\n            <th>Your username</th>\n            <th>Your account email</th>\n          </tr>\n          <tr>\n            <td>{this.props.user.username}</td>\n            <td>{this.props.user.email}</td>\n          </tr>\n        </table>\n        <details>\n          <summary>Change Password</summary>\n          <label>\n            Current Password:\n            <input\n              type=\"text\"\n              onChange={e => this.setState({ password: e.target.value })}\n              placeholder=\"\"\n              style={{ width: \"200px\" }}\n            />\n          </label>\n          <label>\n            New Password:\n            <input\n              type=\"text\"\n              onChange={e => this.setState({ newPassword: e.target.value })}\n              placeholder=\"\"\n              style={{ width: \"200px\" }}\n            />\n          </label>\n          <button\n            onClick={() => {\n              this.updatePassword(this.state.password, this.state.newPassword);\n            }}\n          >\n            Update Password\n          </button>\n        </details>\n        <hr />\n        <h2 style={{ textAlign: \"center\" }}>Selects your interests of book:</h2>\n        <div>\n          <button\n            style={{ margin: \"5px\" }}\n            type=\"button\"\n            class={this.state.buttonClass}\n            onClick={() => {\n              this.addInter({\n                course: \"English\",\n                username: this.props.user.username\n              });\n              this.props.updateInter(\"English\");\n              this.props.randomBook();\n            }}\n          >\n            English\n          </button>\n          <button\n            style={{ margin: \"5px\" }}\n            type=\"button\"\n            class={this.state.buttonClass}\n            onClick={() => {\n              this.addInter({\n                course: \"CSE\",\n                username: this.props.user.username\n              });\n              this.props.updateInter(\"CSE\");\n              this.props.randomBook();\n            }}\n          >\n            CSE\n          </button>\n          <button\n            style={{ margin: \"5px\" }}\n            type=\"button\"\n            class={this.state.buttonClass}\n            onClick={() => {\n              this.addInter({\n                course: \"History\",\n                username: this.props.user.username\n              });\n              this.props.updateInter(\"History\");\n              this.props.randomBook();\n            }}\n          >\n            History\n          </button>\n\n          <span />\n        </div>\n\n        <hr />\n        <h2 style={{ textAlign: \"center\" }}>\n          Here is the book you are currently selling\n        </h2>\n\n        <div>\n          {this.state.currentSellingBook.map(book => (\n            <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\n          ))}\n        </div>\n\n        <AddBook username={this.props.user.username} api={this.props.api} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AccountPage;\n","import styled from \"styled-components\";\n\nexport const LoginWrapper = styled.div`\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const LoginBox = styled.div`\n  width: 320px;\n  height: 370px;\n  background: radial-gradient(\n    ellipse farthest-corner at center top,\n    #1e90ff 0%,\n    #a9bcd0 100%\n  );\n  padding: 50px 30px;\n  color: white;\n  box-sizing: border-box;\n  text-align: center;\n  vertical-align: middle;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 7px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 260px;\n  height: 30px;\n  line-height: 30px;\n  padding: 0 10px;\n  margin: 10px auto;\n  color: #777;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 220px;\n  height: 30px;\n  line-height: 30px;\n  color: #fff;\n  background: #ff0000;\n  border-radius: 15px;\n  margin: 10px auto;\n  text-align: center;\n`;\n","import React, { Component } from 'react';\nimport { LoginWrapper, LoginBox, Input, Button } from \"./loginStyle\";\nimport axios from \"axios\";\nimport Body from \"./body\";\n\nclass ResetPass extends Component {\n    state = { username: null, email: null }\n\n    resetPassword = () => {\n        axios.post(this.props.api+\"/forgetPassword\", {username: this.state.username, email: this.state.email})\n        .then(res=>{\n            if (res.data.success){\n                alert(\"Email Sent. Please check your email.\");\n                this.props.setContent(<Body api={this.props.api}/>);\n            }\n            else{\n                alert(\"Username or Email is incorrect!\");\n            }\n        })\n    };\n\n    render() { \n        return ( <React.Fragment>\n            <LoginWrapper>\n              <LoginBox>\n                <h1>Reset Password:</h1>\n                <label>\n                  Username:\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ username: e.target.value })}\n                    placeholder=\"username\"\n                  />\n                </label>\n                <label>\n                  Email:\n                  <Input\n                    type=\"text\"\n                    onChange={e => this.setState({ email: e.target.value })}\n                    placeholder=\"email\"\n                  />\n                </label>\n                <Button\n                  onClick={() =>{\n                    this.resetPassword();\n                  }}\n                >\n                  Send\n                </Button>\n              </LoginBox>\n            </LoginWrapper>\n          </React.Fragment> );\n    }\n}\n \nexport default ResetPass;","import React, { Component } from \"react\";\nimport { LoginWrapper, LoginBox, Input, Button } from \"./loginStyle\";\nimport axios from \"axios\";\nimport ResetPass from './resetPass';\n\nclass login extends Component {\n  state = { username: \"\", password: \"\" };\n\n  LogintoDB = json => {\n    axios\n      .post(this.props.api +\"/login\", json)\n      .then(res => {\n        if (!res.data.success && res.data.user == null) {\n          alert(\"Username or Password is incorrect.\");\n          return 0;\n        }\n        this.props.login(res.data.user);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <LoginWrapper>\n          <LoginBox>\n            <h1>Login Page</h1>\n            <label>\n              Username:\n              <Input\n                type=\"text\"\n                onChange={e => this.setState({ username: e.target.value })}\n                placeholder=\"username\"\n              />\n            </label>\n            <label>\n              Password:\n              <Input\n                type=\"password\"\n                onChange={e => this.setState({ password: e.target.value })}\n                placeholder=\"password\"\n              />\n            </label>\n            <Button\n              onClick={() =>\n                this.LogintoDB({\n                  username: this.state.username,\n                  password: this.state.password\n                })\n              }\n            >\n              Login to System\n            </Button>\n            <a onClick={()=>this.props.setContent(<ResetPass setContent={this.props.setContent} api={this.props.api}/>)}>Forget Password?</a>\n          </LoginBox>\n        </LoginWrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default login;\n","import styled from \"styled-components\";\n\nexport const RegisterWrapper = styled.div`\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const RegisterBox = styled.div`\n  width: 320px;\n  height: 550px;\n  background: radial-gradient(\n    ellipse farthest-corner at center top,\n    #1e90ff 0%,\n    #a9bcd0 100%\n  );\n  padding: 50px 30px;\n  color: white;\n  box-sizing: border-box;\n  vertical-align: middle;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 7px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 140%;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 255px;\n  height: 30px;\n  line-height: 30px;\n  color: #fff;\n  background: #ff0000;\n  border-radius: 5px;\n  margin: 10px auto;\n  text-align: center;\n`;\n","import React, { Component } from \"react\";\nimport { RegisterWrapper, RegisterBox, Input, Button } from \"./registerStyle\";\nimport axios from \"axios\";\nimport FacebookLogin from \"react-facebook-login\";\n\nclass Register extends Component {\n  state = {\n    username: null,\n    email: null,\n    firstname: null,\n    lastname: null,\n    password: null\n  };\n\n  putDataToUserDB = json => {\n    axios\n      .post(this.props.api+\"/putUser\", json)\n      .then(res => {\n        if (res.data.success) {\n          alert(\"Register Successfully\");\n          this.props.login(json);\n        } else alert(\"User already exist.\");\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <RegisterWrapper>\n          <RegisterBox>\n            <h1> Register Page</h1>\n            <label>\n              Username:\n              <Input\n                type=\"text\"\n                onChange={e => this.setState({ username: e.target.value })}\n                placeholder=\"username\"\n              />\n            </label>\n            <label>\n              Email:\n              <Input\n                type=\"text\"\n                onChange={e => this.setState({ email: e.target.value })}\n                placeholder=\"email\"\n              />\n            </label>\n            <label>\n              Firstname:\n              <Input\n                type=\"text\"\n                onChange={e => this.setState({ firstname: e.target.value })}\n                placeholder=\"firstname\"\n              />\n            </label>\n            <label>\n              Lastname:\n              <Input\n                type=\"text\"\n                onChange={e => this.setState({ lastname: e.target.value })}\n                placeholder=\"lastname\"\n              />\n            </label>\n            <label>\n              Password:\n              <Input\n                type=\"password\"\n                onChange={e => this.setState({ password: e.target.value })}\n                placeholder=\"password\"\n              />\n            </label>\n            <Button\n              onClick={() =>\n                this.putDataToUserDB({\n                  username: this.state.username,\n                  email: this.state.email,\n                  firstname: this.state.firstname,\n                  lastname: this.state.lastname,\n                  password: this.state.password,\n                  interestsList: []\n                })\n              }\n            >\n              Register\n            </Button>\n          </RegisterBox>\n        </RegisterWrapper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport BookCardInfo from \"./bookCardInfo\";\nimport axios from \"axios\";\nimport AccountPage from \"./accountPage\";\nclass InterestsPage extends Component {\n  state = {\n    data: [],\n    intervalIsSet: null\n  };\n\n  getDataFromDb = obj => {\n    axios\n      .post(\"http://localhost:3001/api/guessYouLike\", obj)\n      .then(res => {\n        console.log(res.data.data._id);\n        this.state.data[0] = res.data.data;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* {this.randomBook()} */}\n        {console.log(\"4\")}\n        {console.log(\"props randomBook: \" + this.props.randomBook.length)}\n        {this.props.randomBook.map(book => (\n          <BookCardInfo key={book._id} bookInfo={book} />\n        ))}\n      </div>\n    );\n  }\n}\nexport default InterestsPage;\n","import React, { Component } from \"react\";\nimport StickyHeader from \"react-headroom\";\nimport { Navbar } from \"react-bootstrap\";\nimport { Nav } from \"react-bootstrap\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport { FormControl } from \"react-bootstrap\";\nimport AccountPage from \"./accountPage\";\nimport Body from \"./body\";\nimport Login from \"./login\";\nimport Register from \"./register\";\nimport axios from \"axios\";\nimport BookCardInfo from \"./bookCardInfo\";\nimport InterestsPage from \"./interestsPage\";\nimport { setTimeout } from \"timers\";\n\nclass Header extends Component {\n  state = {\n    input: null,\n    user: null,\n    topRight: null,\n    randomBook: [],\n    currInterests: []\n  };\n\n  componentDidMount() {\n    this.setTopRight(\n      <React.Fragment>\n        <Button\n          style={{ margin: \"5px\" }}\n          variant=\"outline-primary\"\n          onClick={() =>\n            this.props.setContent(\n              <Login\n                setContent={this.props.setContent}\n                login={this.login}\n                api={this.props.api}\n              />\n            )\n          }\n        >\n          Login\n        </Button>\n        <Button\n          style={{ margin: \"5px\" }}\n          variant=\"outline-primary\"\n          onClick={() =>\n            this.props.setContent(\n              <Register login={this.login} api={this.props.api} />\n            )\n          }\n        >\n          Register\n        </Button>\n      </React.Fragment>\n    );\n  }\n\n  setTopRight = content => {\n    this.setState({\n      topRight: content\n    });\n  };\n\n  login = users => {\n    if (users == null) {\n      this.props.setContent(\n        <Login\n          setContent={this.props.setContent}\n          login={this.login}\n          api={this.props.api}\n        />\n      );\n      return 0;\n    }\n\n    this.setState({ user: users, currInterests: users.interestsList });\n    this.randomBook();\n    this.props.setContent(\n      <AccountPage\n        user={users}\n        api={this.props.api}\n        signOut={this.signOut}\n        updateInter={this.updateInter}\n        randomBook={this.randomBook}\n      />\n    );\n    this.setTopRight(\n      <Button\n        style={{ margin: \"5px\" }}\n        variant=\"outline-primary\"\n        onClick={() => this.signOut()}\n      >\n        Sign Out\n      </Button>\n    );\n    return 1;\n  };\n\n  signOut = () => {\n    this.props.setContent(<Body api={this.props.api} />);\n    this.setState({ user: null, currInterests: [], randomBook: [] });\n    this.setTopRight(\n      <React.Fragment>\n        <Button\n          style={{ margin: \"5px\" }}\n          variant=\"outline-primary\"\n          onClick={() =>\n            this.props.setContent(\n              <Login\n                setContent={this.props.setContent}\n                login={this.login}\n                api={this.props.api}\n              />\n            )\n          }\n        >\n          Login\n        </Button>\n        <Button\n          style={{ margin: \"5px\" }}\n          variant=\"outline-primary\"\n          onClick={() =>\n            this.props.setContent(\n              <Register login={this.login} api={this.props.api} />\n            )\n          }\n        >\n          Register\n        </Button>\n      </React.Fragment>\n    );\n  };\n\n  // search = obj => {\n  //   axios\n  //     .post(this.props.api+\"/search\", obj)\n  //     .then(res => {\n  //       this.props.setContent(\n  //         <React.Fragment>\n  //           {res.data.data.map(book => (\n  //             <BookCardInfo key={book._id} bookInfo={book} api={this.props.api} />\n  //           ))}\n  //         </React.Fragment>\n  //       );\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     });\n  // };\n\n  //display random books using current user interests\n  randomBook = () => {\n    if (this.state.user == null) {\n      console.log(\"did not find user.\");\n      return false; //error?\n    } else {\n      let interList = this.state.currInterests;\n      let localRandomBook = [];\n      let localTime = 0;\n      for (let i = 0; i < interList.length; i++) {\n        setTimeout(function() {\n          axios\n            .post(\"http://localhost:3001/api/search\", { course: interList[i] })\n            .then(res => {\n              console.log(\"loop add random books round: \" + i);\n              console.log(\"the res data length: \" + res.data.data.length);\n              localTime = res.data.data.length;\n              if (res.data.data.legnth == 0) {\n                console.log(\n                  \"this is when data is empty. should not get this because this error will be catched\"\n                );\n              } else if (res.data.data.legnth == 1) {\n                console.log(\n                  \"TEST HISTORY COURSE: should see this message because there is only one book of History\"\n                );\n                localRandomBook.push(res.data.data[0]);\n              } else {\n                let random1 = Math.floor(\n                  Math.random() * Math.floor(res.data.data.length)\n                );\n                let random2 = Math.floor(\n                  Math.random() * Math.floor(res.data.data.length)\n                );\n                while (random2 == random1) {\n                  random2 = Math.floor(\n                    Math.random() * Math.floor(res.data.data.length)\n                  );\n                }\n                localRandomBook.push(res.data.data[random1]);\n                localRandomBook.push(res.data.data[random2]);\n              }\n            })\n            .catch(err => {\n              console.log(err);\n            });\n        }, localTime);\n      }\n\n      //after for loop\n      this.setState({ randomBook: localRandomBook });\n    }\n  };\n\n  updateInter = obj => {\n    let tempInter = this.state.currInterests;\n    if (!tempInter.includes(obj)) {\n      tempInter.push(obj);\n      console.log(\"push new Interests to header successfully!!!!!!!\");\n    }\n    for (let i = 0; i < tempInter.length; i++) {\n      console.log(\"inter \" + i + \" in newInterlist: \" + tempInter[i]);\n    }\n    this.setState({ currInterests: tempInter });\n  };\n\n  render() {\n    return (\n      <Navbar\n        bg=\"navbar navbar-dark bg-dark\"\n        expand=\"lg\"\n        style={{ marginBottom: 10 }}\n      >\n        <Navbar.Brand href=\"#home\">\n          UB Platform\n          <img\n            src=\"https://img.icons8.com/doodle/48/000000/books.png\"\n            style={{ width: 30 }}\n          />\n        </Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link\n              href=\"#home\"\n              onSelect={() => {\n                this.props.setContent(<Body api={this.props.api} />);\n              }}\n            >\n              Home\n            </Nav.Link>\n            <Nav.Link\n              href=\"#accountPage\"\n              onSelect={() => {\n                this.login(this.state.user);\n              }}\n            >\n              Account\n            </Nav.Link>\n            <Nav.Link\n              href=\"#InterestsPage\"\n              onSelect={() => {\n                //this.randomBook();\n                //this.updateInterPage();\n                this.props.setContent(\n                  <InterestsPage randomBook={this.state.randomBook} />\n                );\n              }}\n            >\n              InterestsPage\n            </Nav.Link>\n          </Nav>\n          <Form inline>{this.state.topRight}</Form>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"./footerStyle.css\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <footer className=\"page-footer bg-dark\">\n          <div className=\"container-fluid text-center text-md-left\">\n            <div className=\"row\">\n              <div className=\"col-md-6 mt-md-0 mt-3\" style={{ color: \"white\" }}>\n                <h5 className=\"text-uppercase\">Contact US</h5>\n                <p>Email: Please contact us xliu72@buffalo.edu</p>\n                <p>Phone: 4152839557</p>\n              </div>\n\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\n\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\n                  Career Page\n                </h5>\n\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"#!\">Join Team</a>\n                  </li>\n                  <li>\n                    <a href=\"#!\">Seek Career</a>\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"col-md-3 mb-md-0 mb-3\">\n                <h5 className=\"text-uppercase\" style={{ color: \"white\" }}>\n                  See Team\n                </h5>\n\n                <ul className=\"list-unstyled\">\n                  <li>\n                    <a href=\"#!\">Post Question</a>\n                  </li>\n                  <li>\n                    <a href=\"#!\">Seek Question</a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div\n            className=\"footer-copyright text-center py-3\"\n            style={{ color: \"white\" }}\n          >\n            <p>© 2019 Copyright</p>\n            <a href=\"https://www.google.com/\"> www.ubplatform.com</a>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Body from \"./components/body\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport InterestsPage from \"./components/interestsPage\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  // initialize our state\n  state = {\n    api : \"http://3.18.110.2:3001/api\",\n    content: null,\n    deleteByIdFromDB: null,\n    book: [\n      {\n        title: \"Harry Potter\",\n        price: \"$2\",\n        course: \"CSE442\",\n        url:\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\n      },\n      {\n        title: \"Harry Potter\",\n        price: \"$20\",\n        course: \"CSE442\",\n        url:\n          \"https://jamesclear.com/wp-content/uploads/2015/02/Harry-Potter-by-JK-Rowling-568x700.jpeg\"\n      }\n    ]\n  };\n\n  componentDidMount(){\n    this.setState({content: <Body api={this.state.api}/>});\n  }\n\n  //Warning! This is use for test purpose, This will delete all data in database\n  deleteAll = () => {\n    this.state.data.forEach(dat => {\n      axios.delete(this.state.api+\"/deleteByIdData\", {\n        data: {\n          id: dat._id\n        }\n      });\n    });\n  };\n\n  //This method allow to add multiple book at once\n  // arrBook = array of JSON that contain book information (see dataschema for detail)\n  addAll = arrBook => {\n    arrBook.forEach(bok => {\n      axios.post(this.state.api+\"/putData\", bok);\n    });\n  };\n\n  setContent = obj => {\n    this.setState({ content: obj });\n  };\n\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#D8D8D8\" }}>\n        <Header setContent={this.setContent} api={this.state.api}/>\n        {/* <button onClick={this.deleteAll}>Delete All Book</button> */}\n        {this.state.content}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}